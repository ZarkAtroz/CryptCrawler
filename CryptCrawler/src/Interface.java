import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;

// Para funcionar, vá para o IntelliJ, clique com o botão direito no arquivo .jar e clique em "add as a library" (ultima opção)
import asciiPanel.AsciiPanel;

public class Interface extends JPanel {

    private int x = 200; // posição inicial x do personagem
    private int y = 200; // posição inicial y do personagem
    private int moveSpeed;
    private AsciiPanel telaDeJogo;
    private AsciiPanel statusJogador;
    private AsciiPanel relatorioJogo;
    private AsciiPanel miniMapa;

    private int telaDeJogoWidth = 80; // largura do painel ASCII (em caracteres)
    private int telaDeJogoHeight = 24; // altura do painel ASCII (em caracteres)
    private int statusJogadorWidht = 80;
    private int statusJogadorHeight = 12;
    private int relatorioJogoWidht = 49;
    private int relatorioJogoHeight = 20;
    private int miniMapaWidht = 49;
    private int miniMapaHeight = 16;

    private static final int CHAR_WIDTH = 9;
    private static final int CHAR_HEIGHT = 16;

    public Interface() {
        this.setFocusable(true);

        telaDeJogo = new AsciiPanel();
        telaDeJogo.setSize(telaDeJogoWidth * CHAR_WIDTH, telaDeJogoHeight * CHAR_HEIGHT);
        telaDeJogo.setBounds(30, 30, telaDeJogoWidth * CHAR_WIDTH, telaDeJogoHeight * CHAR_HEIGHT);
        this.add(telaDeJogo);

        statusJogador = new AsciiPanel();
        statusJogador.setSize(statusJogadorWidht  * CHAR_WIDTH, statusJogadorHeight * CHAR_HEIGHT);
        statusJogador.setBounds(30, 464, statusJogadorWidht * CHAR_WIDTH, statusJogadorHeight * CHAR_HEIGHT);
        this.add(statusJogador);

        relatorioJogo = new AsciiPanel();
        relatorioJogo.setSize(relatorioJogoWidht * CHAR_WIDTH, relatorioJogoHeight * CHAR_HEIGHT);
        relatorioJogo.setBounds(790, 30, relatorioJogoWidht * CHAR_WIDTH, relatorioJogoHeight * CHAR_HEIGHT);
        this.add(relatorioJogo);

        miniMapa = new AsciiPanel();
        miniMapa.setSize(miniMapaWidht * CHAR_WIDTH, miniMapaHeight * CHAR_HEIGHT);
        miniMapa.setBounds(790, 390, miniMapaWidht * CHAR_WIDTH, miniMapaHeight * CHAR_HEIGHT);
        this.add(miniMapa);

        updateAsciiPanel();
    }

    private void updateAsciiPanel(){

        telaDeJogo.clear();
        statusJogador.clear();
        relatorioJogo.clear();
        miniMapa.clear();

        // Exemplo de uma sala vazia
        // largura: 80 | altura: 24 (em pixels)
        char[][] matriz = new char[][]{
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','@','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
                {'.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.','.',},
        };

//        telaDeJogo.write("Tela de jogo", 1, 1);
        for(int i = 0; i < matriz.length; i++){
            for(int j = 0; j < matriz[i].length; j++){
                telaDeJogo.write(matriz[i][j], j, i);
            }

        }

        statusJogador.write("Status Jogador", 1, 1);
        relatorioJogo.write("Relatorio Jogo", 1, 1);
        miniMapa.write("Mini Mapa", 1, 1);

        statusJogador.repaint();
        telaDeJogo.repaint();
        relatorioJogo.repaint();
        miniMapa.repaint();
    }

    public void setMoveSpeed(int moveSpeed){
        this.moveSpeed = moveSpeed;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);

        // Desenha fundo preto
        g.setColor(Color.MAGENTA);
        g.fillRect(0, 0, getWidth(), getHeight());

        g.setColor(Color.ORANGE);
        g.fillRect(20, 20, telaDeJogoWidth * CHAR_WIDTH + 20, telaDeJogoHeight * CHAR_HEIGHT + 20);

        g.fillRect(20, 444, statusJogadorWidht * CHAR_WIDTH + 20, statusJogadorHeight * CHAR_HEIGHT + 20);

        g.fillRect(780, 20, relatorioJogoWidht * CHAR_WIDTH + 20, relatorioJogoHeight * CHAR_HEIGHT + 20);

        g.fillRect(780, 380, miniMapaWidht * CHAR_WIDTH + 20, miniMapaHeight * CHAR_HEIGHT + 20);

        telaDeJogo.setBounds(30, 30, telaDeJogoWidth * CHAR_WIDTH, telaDeJogoHeight * CHAR_HEIGHT);
        statusJogador.setBounds(30, 454, statusJogadorWidht * CHAR_WIDTH, statusJogadorHeight * CHAR_HEIGHT);
        relatorioJogo.setBounds(790, 30, relatorioJogoWidht * CHAR_WIDTH, relatorioJogoHeight * CHAR_HEIGHT);
        miniMapa.setBounds(790, 390, miniMapaWidht * CHAR_WIDTH, miniMapaHeight * CHAR_HEIGHT);


    }
}
