public class UI {

    public static void main(String[] args) throws Exception {
        String[] linhas = {
            "█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
            "█                                                                                                                                                                                                               █",
            "█  ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████  ███████████████████████████████████████████████████████████████████  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  ███████████████████████████████████████████████████████████████████  █",
            "█  █                                                                                                                                    █                                                                       █",
            "█  █                                                                                                                                    █  ███████████████████████████████████████████████████████████████████  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████  █                                                                 █  █",
            "█                                                                                                                                          █                                                                 █  █",
            "█  ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  █                                                                                                                                    █  █                                                                 █  █",
            "█  ██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████  ███████████████████████████████████████████████████████████████████  █",
            "█                                                                                                                                                                                                               █",
            "█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████",
        };

        char[][] charMatriz = new char[51][200];

        for(int i = 0; i < 51; i++){
            charMatriz[i] = linhas[i].toCharArray();
        }

        // Espaçoes em brancos
        // Pareçe um espaço normal, porém ele tem uma largura diferente do normal. Se usar espaço normal, a quebra de linha fica errada ao printar a UI
        char espacoBranco = ' ';
        
        // for(int i = 0; i < charMatriz.length; i++){
        //     for(int j = 0; j < charMatriz[i].length; j++){
        //         int asciiNumber = (int) charMatriz[i][j];
        //         if(asciiNumber == 9617) // 9632
        //             charMatriz[i][j] = 160;
        //     }
        // }

        for(int i = 0; i < charMatriz.length; i++){
            for(int j = 0; j < charMatriz[i].length; j++){
                System.out.print(charMatriz[i][j]);
            }
            System.out.println();
        }

    }

}
